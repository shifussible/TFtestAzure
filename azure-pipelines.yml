# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  rgname: "rgarctic01"
  saname: "storagearctic01"
  container: "b2ctfstate"
  key: "terraform.tfstate"

stages:
  - stage: tfvalidate
    displayName: validate Stage
    dependsOn: []
    jobs:
    - job: validate
      continueOnError: false
      steps:
        - task: TerraformInstaller@0
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV3@3
          displayName: init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'arcticSPCONN'
            backendAzureRmResourceGroupName: '$(rgname)'
            backendAzureRmStorageAccountName: '$(saname)'
            backendAzureRmContainerName: '$(container)'
            backendAzureRmKey: '$(key)'
    - job: deploy2Prod
      continueOnError: false
      environment: Prod
      steps:
        - task: TerraformInstaller@0
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
